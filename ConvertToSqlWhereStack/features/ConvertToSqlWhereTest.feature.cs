// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ConvertToSqlWhereStack.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ConvertToSqlWhereTestFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ConvertToSqlWhereTest.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ConvertToSqlWhereTest", @"將 [bb:] action (cc[,cc]*) 轉成 sql where 語句
1.action 的值是add or not equals 四个中逻辑操作符中的任意一个,随机出现
2.[bb:] 方括号表示可省略内容，* 表示零个或者多个。bb对应数据结构定义中的name、age、pwd 等字段。
3.	and, or 是布尔逻辑操作，可以接收两个的cc，分别代表“与” 和“或” 操作；
not 是逻辑否操作，只接受一个cc,表示不等于；
equals 只接收一个cc，用来选择指定bb 和所提供的cc 相等的所有数据条目，例如：
	equals(""adam"" ) // 返回所有任一个bb等于 ""adam"" 的数据
name:equals(""adam jones"" ) // 返回所有name等于 ""adam jones"" 的数据
	age:equals(40) // 返回所有age等于40的数据

需求：
现在需要写个程序，对形如[bb:] action (cc[,cc]*)形式的字符串生成sql语句where后面的部分

举例：
and(or(name:equals("" admin"" ), age:equals(32)), not(gender:equals("" male"" )))
的输入结果为：(name=""admin"" or age=32 ) and gender <> ""male""

註:
未實作 equals(""adam"" )", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "ConvertToSqlWhereTest")))
            {
                ConvertToSqlWhereStack.Features.ConvertToSqlWhereTestFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void 轉換(string exampleDescription, string input, string output, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("轉換", exampleTags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given(string.Format("將輸入的語句 {0}", input), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.When("進行轉換後", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then(string.Format("得到 sql where 語句 {0}", output), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "age:equals(20)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = 20")]
        public virtual void 轉換_N_EQ_()
        {
            this.轉換("N.EQ.", "age:equals(20)", "age = 20", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "S.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "age:equals(\"20\")")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = \'20\'")]
        public virtual void 轉換_S_EQ_()
        {
            this.轉換("S.EQ.", "age:equals(\"20\")", "age = \'20\'", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.NE.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.NE.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "not(age:equals(20))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age != 20")]
        public virtual void 轉換_N_NE_()
        {
            this.轉換("N.NE.", "not(age:equals(20))", "age != 20", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S.NE.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "S.NE.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "not(age:equals(\"20\"))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age != \'20\'")]
        public virtual void 轉換_S_NE_()
        {
            this.轉換("S.NE.", "not(age:equals(\"20\"))", "age != \'20\'", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ. and. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ. and. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(age:equals(20),salary:equals(22000))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = 20 and salary = 22000")]
        public virtual void 轉換_N_EQ_And_N_EQ_()
        {
            this.轉換("N.EQ. and. N.EQ.", "and(age:equals(20),salary:equals(22000))", "age = 20 and salary = 22000", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ. and. N.EQ. and. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ. and. N.EQ. and. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(age:equals(20),salary:equals(22000),seniority:equals(2))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = 20 and salary = 22000 and seniority = 2")]
        public virtual void 轉換_N_EQ_And_N_EQ_And_N_EQ_()
        {
            this.轉換("N.EQ. and. N.EQ. and. N.EQ.", "and(age:equals(20),salary:equals(22000),seniority:equals(2))", "age = 20 and salary = 22000 and seniority = 2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ. and. N.NE. and. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ. and. N.NE. and. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(age:equals(20),not(salary:equals(22000)),seniority:equals(2))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = 20 and salary != 22000 and seniority = 2")]
        public virtual void 轉換_N_EQ_And_N_NE_And_N_EQ_()
        {
            this.轉換("N.EQ. and. N.NE. and. N.EQ.", "and(age:equals(20),not(salary:equals(22000)),seniority:equals(2))", "age = 20 and salary != 22000 and seniority = 2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "S.EQ. and. N.NE. and. S.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "S.EQ. and. N.NE. and. S.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(not(age:equals(\"20\")),not(salary:equals(22000)),seniority:equals(\"2\"))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age != \'20\' and salary != 22000 and seniority = \'2\'")]
        public virtual void 轉換_S_EQ_And_N_NE_And_S_EQ_()
        {
            this.轉換("S.EQ. and. N.NE. and. S.EQ.", "and(not(age:equals(\"20\")),not(salary:equals(22000)),seniority:equals(\"2\"))", "age != \'20\' and salary != 22000 and seniority = \'2\'", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ. or. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ. or. N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "or(age:equals(20),salary:equals(22000))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = 20 or salary = 22000")]
        public virtual void 轉換_N_EQ_Or_N_EQ_()
        {
            this.轉換("N.EQ. or. N.EQ.", "or(age:equals(20),salary:equals(22000))", "age = 20 or salary = 22000", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.NE. or. S.NE. or N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.NE. or. S.NE. or N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "or(not(age:equals(20)),not(salary:equals(\"22000\")),seniority:equals(2))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age != 20 or salary != \'22000\' or seniority = 2")]
        public virtual void 轉換_N_NE_Or_S_NE_OrN_EQ_()
        {
            this.轉換("N.NE. or. S.NE. or N.EQ.", "or(not(age:equals(20)),not(salary:equals(\"22000\")),seniority:equals(2))", "age != 20 or salary != \'22000\' or seniority = 2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "(S.NE. and. N.EQ.) or N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "(S.NE. and. N.EQ.) or N.EQ.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "or(and(not(age:equals(\"20\")),salary:equals(22000)),seniority:equals(2))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "( age != \'20\' and salary = 22000 ) or seniority = 2")]
        public virtual void 轉換_S_NE_And_N_EQ_OrN_EQ_()
        {
            this.轉換("(S.NE. and. N.EQ.) or N.EQ.", "or(and(not(age:equals(\"20\")),salary:equals(22000)),seniority:equals(2))", "( age != \'20\' and salary = 22000 ) or seniority = 2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ. and. (S.NE. or. S.NE.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ. and. (S.NE. or. S.NE.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(age:equals(20),or(not(salary:equals(\"22000\")),not(seniority:equals(\"2\")))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "age = 20 and ( salary != \'22000\' or seniority != \'2\' )")]
        public virtual void 轉換_N_EQ_And_S_NE_Or_S_NE_()
        {
            this.轉換("N.EQ. and. (S.NE. or. S.NE.)", "and(age:equals(20),or(not(salary:equals(\"22000\")),not(seniority:equals(\"2\")))", "age = 20 and ( salary != \'22000\' or seniority != \'2\' )", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "(N.NE. and. S.EQ.) or. (S.NQ. and. N.EQ.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "(N.NE. and. S.EQ.) or. (S.NQ. and. N.EQ.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "or(and(not(b:equals(2)),c:equals(\"3\")),and(not(d:equals(\"4\")),a:equals(1)))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "( b != 2 and c = \'3\' ) or ( d != \'4\' and a = 1 )")]
        public virtual void 轉換_N_NE_And_S_EQ_Or_S_NQ_And_N_EQ_()
        {
            this.轉換("(N.NE. and. S.EQ.) or. (S.NQ. and. N.EQ.)", "or(and(not(b:equals(2)),c:equals(\"3\")),and(not(d:equals(\"4\")),a:equals(1)))", "( b != 2 and c = \'3\' ) or ( d != \'4\' and a = 1 )", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "(N.NE. or. S.EQ.) and. (S.NQ. or. N.EQ.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "(N.NE. or. S.EQ.) and. (S.NQ. or. N.EQ.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(or(not(b:equals(2)),c:equals(\"3\")),or(not(d:equals(\"4\")),a:equals(1)))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "( b != 2 or c = \'3\' ) and ( d != \'4\' or a = 1 )")]
        public virtual void 轉換_N_NE_Or_S_EQ_And_S_NQ_Or_N_EQ_()
        {
            this.轉換("(N.NE. or. S.EQ.) and. (S.NQ. or. N.EQ.)", "and(or(not(b:equals(2)),c:equals(\"3\")),or(not(d:equals(\"4\")),a:equals(1)))", "( b != 2 or c = \'3\' ) and ( d != \'4\' or a = 1 )", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("轉換")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ConvertToSqlWhereTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "N.EQ. or. N.NQ. or. S.EQ ) and. (S.EQ. and. N.NQ. and. S.NQ. ) and. ( S.NQ. or. N" +
            ".EQ. or. S.EQ.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:example description", "N.EQ. or. N.NQ. or. S.EQ ) and. (S.EQ. and. N.NQ. and. S.NQ. ) and. ( S.NQ. or. N" +
            ".EQ. or. S.EQ.)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:input", "and(or(a:equals(1),not(b:equals(2)),c:equals(\"3\")),and(c:equals(\"3\"),not(b:equals" +
            "(2)),not(d:equals(\"4\"))),or(not(d:equals(\"4\")),a:equals(1),c:equals(\"3\")))")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:output", "( a = 1 or b != 2 or c = \'3\' ) and ( c = \'3\' and b != 2 and d != \'4\' ) and ( d !=" +
            " \'4\' or a = 1 or c = \'3\' )")]
        public virtual void 轉換_N_EQ_Or_N_NQ_Or_S_EQAnd_S_EQ_And_N_NQ_And_S_NQ_And_S_NQ_Or_N_EQ_Or_S_EQ_()
        {
            this.轉換("N.EQ. or. N.NQ. or. S.EQ ) and. (S.EQ. and. N.NQ. and. S.NQ. ) and. ( S.NQ. or. N" +
                    ".EQ. or. S.EQ.)", "and(or(a:equals(1),not(b:equals(2)),c:equals(\"3\")),and(c:equals(\"3\"),not(b:equals" +
                    "(2)),not(d:equals(\"4\"))),or(not(d:equals(\"4\")),a:equals(1),c:equals(\"3\")))", "( a = 1 or b != 2 or c = \'3\' ) and ( c = \'3\' and b != 2 and d != \'4\' ) and ( d !=" +
                    " \'4\' or a = 1 or c = \'3\' )", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
